name: CI/CD Pipeline

on:
  push:
    branches:
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          docker build -t bateel-automation-demo:latest .

      - name: Stop and Remove Existing Container
        run: |
          docker stop bateel-automation-demo || true
          docker rm bateel-automation-demo || true

      - name: Run Tests and Generate Allure Report
        run: |
          docker run --name bateel-automation-demo -e DISPLAY=:99 -v /tmp/.X11-unix:/tmp/.X11-unix bateel-automation-demo:latest /bin/sh -c "Xvfb :99 -screen 0 1920x1080x24 & DISPLAY=:99 mvn clean test -X"

      - name: Save Allure Report to Local Directory
        run: |
          docker cp bateel-automation-demo:/usr/share/HamleysAutomation/allure-results ./allure-results

      - name: Add SSH Key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519   

      - name: Add SSH known hosts
        run: |
          ssh-keyscan -p 2255 bateel-automation-demo.magentoprojects.net >> ~/.ssh/known_hosts

      - name: Upload Allure Report to Docker Container
        env:
          USERNAME: bateel-automation-demo
          PORT: 2255
        run: |
            eval "$(ssh-agent -s)"
            ssh-add -D
            ssh-add ~/.ssh/id_ed25519
            for file in ./allure-results/*; do
              scp -P "$PORT" -i ~/.ssh/id_ed25519 -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -vvv "$file" "$USERNAME@bateel-automation.magentoprojects.net:/var/www/html/bateel-automation-demo/webroot" || { echo "Failed to upload $file"; exit 1; }
            done