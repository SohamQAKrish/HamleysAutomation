name: CI/CD Pipeline

on:
  push:
    branches:
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          docker build -t bateel-automation-demo:latest .

      - name: Stop and Remove Existing Container
        run: |
          docker stop bateel-automation-demo || true
          docker rm bateel-automation-demo || true

      - name: Run Tests in Docker Container
        run: |
          docker run --name bateel-automation-demo -d -e DISPLAY=:99 -v /tmp/.X11-unix:/tmp/.X11-unix bateel-automation-demo:latest /bin/sh -c "Xvfb :99 -screen 0 1920x1080x24 & DISPLAY=:99 mvn clean test"

      - name: Save Allure Report to Local Directory
        run: |
          docker cp bateel-automation-demo:/usr/share/HamleysAutomation/allure-results ./allure-results

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Copy Allure Report to Remote Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Create directory for allure results on the remote server
          ssh -o StrictHostKeyChecking=no -i private_key.pem -p 2255 bateel-automation-demo@bateel-automation-demo.magentoprojects.net "mkdir -p ~/allure-results"

          # Copy the allure results to the remote server
          scp -o StrictHostKeyChecking=no -i private_key.pem -P 2255 ./allure-results/* bateel-automation-demo@bateel-automation-demo.magentoprojects.net:~/allure-results/

          # If there's a running Docker container on the remote server, copy results to it
          ssh -o StrictHostKeyChecking=no -i private_key.pem -p 2255 bateel-automation-demo@bateel-automation-demo.magentoprojects.net "docker cp ~/allure-results/. bateel-automation-demo:/var/www/html/allure-results"