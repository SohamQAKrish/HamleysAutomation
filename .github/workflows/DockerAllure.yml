name: Docker GitHub Integration

on:
  push:
    branches:
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Download and Install Allure CLI
        run: |
          set -x  # Enable debug output
          ALLURE_VERSION=2.20.1
          wget -q "https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}-zip.zip" -O allure.zip || { echo "Failed to download Allure"; exit 1; }
          
          unzip -q allure.zip -d allure || { echo "Failed to unzip Allure"; exit 1; }
          
          sudo mv allure /usr/local/bin/allure
          echo 'export PATH=$PATH:/usr/local/bin/allure/bin' >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t bateel-automation-demo:latest .

      - name: Stop and Remove Existing Container
        run: |
          docker stop bateel-automation-demo || true
          docker rm bateel-automation-demo || true

      - name: Run Tests and Generate Allure Report
        run: |
          docker run --name bateel-automation-demo -e DISPLAY=:99 -v /tmp/.X11-unix:/tmp/.X11-unix bateel-automation-demo:latest /bin/sh -c "
          Xvfb :99 -screen 0 1920x1080x24 & DISPLAY=:99 mvn clean test -X"

      - name: Save Allure Results to Local Directory
        run: |
          docker cp bateel-automation-demo:/usr/share/HamleysAutomation/allure-results ./allure-results

      - name: Generate Allure HTML Report
        run: |
          allure generate ./allure-results --output ./allure-report --clean

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Preserve Existing env.prop on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "cp /var/www/html/bateel-automation-demo/webroot/env.prop /tmp/ || true"

      - name: Clear Old Allure Reports on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "rm -rf /var/www/html/bateel-automation.magentoprojects.net/webroot/allure-report/*" || { echo "Failed to clear old reports"; exit 1; }

      - name: Upload Allure Report to Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no -r ./allure-report/* "$USERNAME@bateel-automation.magentoprojects.net:/var/www/html/bateel-automation-demo/webroot" || { echo "Failed to upload files"; exit 1; }

      - name: Restore env.prop on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "mv /tmp/env.prop /var/www/html/bateel-automation.magentoprojects.net/webroot/ || true"
