name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: |
          docker build -t hamleys-automation .

      - name: Run Selenium Tests
        run: |
          docker run --name hamleys-automation \
          -v ${{ github.workspace }}/allure-results:/usr/share/HamleysAutomation/allure-results \
          hamleys-automation

      - name: Check Test Execution Exit Code
        run: |
          EXIT_CODE=$(docker inspect -f '{{.State.ExitCode}}' hamleys-automation)
          echo "Test execution exit code: $EXIT_CODE"
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "Tests failed, checking logs..."
            docker logs hamleys-automation
            exit 1
          fi

      - name: Generate Allure HTML Report
        run: |
          docker run --rm -v ${{ github.workspace }}/allure-results:/usr/share/HamleysAutomation/allure-results \
          allure-framework/allure-docker:latest generate /usr/share/HamleysAutomation/allure-results --output ./allure-report --clean

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./allure-report

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Publish Allure Report to Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}  # Store this in your repo secrets
          SERVER: bateel-automation-demo.magentoprojects.net
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no -r ./allure-report/* "$USERNAME@$SERVER:/var/www/html/bateel-automation-demo/webroot" || { echo "Failed to upload files"; exit 1; }