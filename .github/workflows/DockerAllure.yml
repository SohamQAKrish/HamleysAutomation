name: Docker GitHub Integration

on:
  push:
    branches:
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Build Docker Image
        run: |
          docker build -t bateel-automation-demo:latest .

      - name: Stop and Remove Existing Container
        run: |
          docker stop bateel-automation-demo || true
          docker rm bateel-automation-demo || true

      - name: Remove Old Allure Results
        run: |
          rm -rf ./dockerIntegration/allure-results/* || true

      - name: Create allure-results directory
        run: |
          mkdir -p ./dockerIntegration/allure-results

      - name: Run Tests and Generate Allure Report
        run: |
          docker run --name bateel-automation-demo -e DISPLAY=:99 -v /tmp/.X11-unix:/tmp/.X11-unix bateel-automation-demo:latest /bin/sh -c "
          Xvfb :99 -screen 0 1920x1080x24 & DISPLAY=:99 mvn clean test -X"

      - name: Check Test Execution Exit Code
        run: |
          EXIT_CODE=$(docker inspect -f '{{.State.ExitCode}}' bateel-automation-demo)
          echo "Test execution exit code: $EXIT_CODE"
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "Tests failed, checking logs..."
            docker logs bateel-automation-demo
            exit 1
          fi

      - name: List Allure Results in Container
        run: |
          docker exec bateel-automation-demo ls -l /usr/share/HamleysAutomation/allure-results || echo "Container not running; skipping result check."

      - name: Save Allure Results to Local Directory
        run: |
          docker cp bateel-automation-demo:/usr/share/HamleysAutomation/allure-results ./dockerIntegration/allure-results

      - name: Save env.prop from Container
        run: |
          docker cp bateel-automation-demo:/usr/share/HamleysAutomation/env.prop ./env.prop || echo "Failed to retrieve env.prop from container."

      - name: Generate Allure HTML Report
        run: |
          allure generate ./dockerIntegration/allure-results --output ./allure-report --clean

      - name: List Allure Report
        run: |
          ls -l ./allure-report

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Preserve Existing env.prop on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "cp /var/www/html/bateel-automation-demo/webroot/env.prop /tmp/ || true"

      - name: Clear Old Allure Reports on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "rm -rf /var/www/html/bateel-automation.magentoprojects.net/webroot/allure-report/*" || { echo "Failed to clear old reports"; exit 1; }

      - name: Upload Allure Report to Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no -r ./allure-report/* "$USERNAME@bateel-automation.magentoprojects.net:/var/www/html/bateel-automation-demo/webroot" || { echo "Failed to upload files"; exit 1; }

      - name: Restore env.prop on Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USERNAME@bateel-automation.magentoprojects.net" "mv /tmp/env.prop /var/www/html/bateel-automation.magentoprojects.net/webroot/ || true"

      - name: Commit and Push Updated env.prop
        run: |
          git config --local user.email "soham.pandit@krishtechnolabs.com"
          git config --local user.name "SohamQAKrish"
          git add ./env.prop
          git commit -m "Update env.prop after tests" || echo "No changes to commit"
          git push origin dockerIntegration