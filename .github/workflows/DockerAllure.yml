name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dockerIntegration

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Allure Commandline
        run: |
          npm install -g allure-commandline --save-dev

      - name: Build Docker Image
        run: |
          docker build -t hamleys-automation .

      - name: Ensure Allure Environment File Exists
        run: |
          if [ ! -f allure-results/env.properties ]; then
            echo "Creating an empty env.properties file."
            echo "Not specified" > allure-results/env.properties
          fi

      - name: Run Tests and Generate Allure Report
        run: |
            docker run --name bateel-automation-demo -e DISPLAY=:99 -v /tmp/.X11-unix:/tmp/.X11-unix bateel-automation-demo:latest /bin/sh -c "Xvfb :99 -screen 0 1920x1080x24 & DISPLAY=:99 mvn clean test -X"
  

      - name: Inspect Hamleys Directory
        run: |
          echo "Contents of /usr/share/HamleysAutomation:"
          docker run --rm hamleys-automation ls -la /usr/share/HamleysAutomation

      - name: Check Test Execution Exit Code
        run: |
          EXIT_CODE=$(docker inspect -f '{{.State.ExitCode}}' hamleys-automation)
          echo "Test execution exit code: $EXIT_CODE"
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "Tests failed, checking logs..."
            docker logs hamleys-automation
            docker rm hamleys-automation
            exit 1
          fi

      - name: Inspect Allure Results
        run: |
          echo "Contents of allure-results:"
          ls -la allure-results

      - name: Generate Allure HTML Report
        run: |
          allure generate allure-results --output ./allure-report --clean

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./allure-report

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Publish Allure Report to Server
        env:
          USERNAME: bateel-automation-demo
          PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SERVER: bateel-automation-demo.magentoprojects.net
          PORT: 2255
        run: |
          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no -r ./allure-report/* "$USERNAME@$SERVER:/var/www/html/bateel-automation-demo/webroot" || { echo "Failed to upload files"; exit 1; }